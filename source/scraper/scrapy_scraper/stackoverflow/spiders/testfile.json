[
{"question": {"question_title": "GET request in Flask - send data from python backend to client", "question_text": "I have a page that asks the user for informations, the user selects options and confirms his choice. The answers are sent to the backend, and a file is made.\nI want to send back the file to the user but for this I have to send information from the backend to the frontend.\nI tried using \"return render_template\" and \"redirect\" but it didn't work\nI have been told I have to do a GET request but I'm not sure how to do this, I know how to send data from client to server but I never did from server to client and I haven't found how to do this with Flask.\n@app.route('/createdocument', methods=['POST', 'GET'])\n#@login_required\ndef create_document():\n    playlists = get_playlists()\n    if request.method == \"POST\":\n        request_data = str(request.data.decode('UTF-8'))\n        genre = get_header_genre(request_data)\n        parsed_data = parse_request(request_data)           \n        playlist_names = get_parsed_playlists(parsed_data)\n        if genre == \"playlist\":\n            #make_playlist_doc(playlist_names, genre)\n            print(\"playlist option not ready yet\")\n        elif genre == \"socan\":\n            name = make_socan_doc(playlist_names, genre)\n            return render_template(\"tools/downloadfile.html\", document=name)\n        else:\n            print(\"other request:\")\n            print(str(request.data.decode('UTF-8')))\n    if request.method == \"GET\":\n        ########################## Something I guess but I don't know what\n   return render_template(\"tools/createdocument.html\", playlists=playlists)\n\nI found this looking for a GET request\nfunction httpGetAsync(theUrl, callback)\n{\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() { \n        if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\n            callback(xmlHttp.responseText);\n    }\n    xmlHttp.open(\"GET\", theUrl, true); \n    xmlHttp.send(null);\n}\n\nIf I understand well I should but /createdocument in theUrl, but what should I put in callback ?", "question_tags": ["javascript", "flask", "get"], "question_author_name": "Santeau", "question_author_link": "/users/9195085/santeau", "question_author_reputation": "77", "question_date": "2 hours ago", "question_comments": [], "all_answers": [{"text": "I think you are on the right track with the return render_template approach. What exactly isn't working?\nFor the client - can you use axios or fetch instead; those are fairly common libraries these days to get GET requests from the client.\naxios.get('/createdocument', {\n    params: {}\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });   \n\nThat said if you are trying to do all of this asynchronously (i.e. the user submits the POST request and the file is not returned as part of that request, but is returned at some arbitrary later time), look into something like setting up a web socket\nHere is a Flask-based websocket server that should work", "author": "Chris Zacny", "author_link": "/users/4926038/chris-zacny", "author_reputation": "1", "date": "1 hour ago", "comments": [{"text": "Thank you for your answer, I tried return render_template() and redirect but it doesn't work (nothing happens). I already asked about that issue: shorturl.at/gwB14 I understand it a little better what's expected by flask but I still don't have a solution. Ideally render_template would work but if I can't find a way to send back data from the server to the front I'll have to avoid that, I can find a way around but I'll run again into that problem pretty soon and it's a terrible design constraint :(", "author": "Santeau", "date": "1 hour ago"}]}], "answers_made": "3", "question_made": "16", "people_reached": "~4k", "member_since": "2 years, 7 months", "profile_view": "17 profile views", "last_see": "45 mins ago"}},
{"question": {"question_title": "Flask Testing Route '/'", "question_text": "I have the following route for my index page:\n@app.route('/', methods=['POST', 'GET'])\n\nWhen attempting to test this route to ensure I receive a 200 status code, I am getting errors. I've been trying to do it with the code below:\ndef test_index(self):\n    tester = app.test_client()\n    response = tester.get('/')\n    status_code = response.status_code\n    self.assertEqual(status_code, 200)\n\nThe code above gives me a 500 status code. The other ways I have tried was to use the code response = tester.get(''), because the URL on the localhost doesn't have a trailing slash, but this gives me a 308.\nMy other routes pass fine, I just can't figure out how to get it for the index route.", "question_tags": ["python", "flask"], "question_author_name": "Gino Mempin", "question_author_link": "/users/2745495/gino-mempin", "question_author_reputation": "8,071", "question_date": "16 hours ago", "question_comments": [{"text": "Check the error trace for 500. It might point to where the error occurred", "author": "mtshaikh", "date": "16 hours ago"}], "all_answers": [], "answers_made": "0", "question_made": "2", "people_reached": "~70", "member_since": "5 days", "profile_view": "2 profile views", "last_see": "10 hours ago"}},
{"question": {"question_title": "Live Search with Bootstrap forms in Flask/Jinga2", "question_text": "I'm trying to replicate the live search option as described here https://developer.snapappointments.com/bootstrap-select/examples/ in my Flask application. The minimal example below has the third box hardcoded as in the example and it works as expected.\nMy actual app uses WTF forms/Jinga2 and I cannot figure out how to modify the Jinga2 code such that the live search would be available in my first SelectField or in the second SelectMultipleField.\nCan someone suggest how I can implement a live search using the WTF form/Jinga2 to resemble the working example?\nfrom flask import Flask, render_template, request, session, current_app, flash,redirect, url_for, jsonify\nfrom flask_wtf import FlaskForm\nfrom wtforms import StringField, TextField, SubmitField, SelectField, IntegerField, BooleanField, RadioField, FileField, HiddenField,SelectMultipleField\nfrom wtforms.validators import DataRequired, Length\nserver = Flask(__name__)\nserver.secret_key = b'_5#y2L\"F4Q8z\\n\\xec]/'\n\nclass simpleForm(FlaskForm):\n    varlist1 = SelectField('Choose',  [DataRequired()], coerce=str)\n    varlist2 = SelectField('Choose',  [DataRequired()], coerce=str) \n    submitA = SubmitField('Get Stuff')\n    varlist3 = SelectMultipleField('Choose Test(s):', [DataRequired()], choices=[('', '')])    \n        \n@server.route('/menu', methods=[\"post\", \"get\"])\ndef menu():\n    form = simpleForm()\n    vars = ['Option 1','Option 2']\n    var2list = [['A', 'B', 'C'],['D','E', 'F', 'G'],['1', '2']] \n    vars3 = ['a','b','c','d']\n    form.varlist1.choices = vars\n    form.varlist2.choices = var2list[0]\n    form.varlist3.choices = [(i, i) for i in vars3]\n    #form.varlist2.choices = var2list[1] \n    #form.varlist2.choices = var2list[2]\n    return render_template('menu.html', form = form)  \n\nif __name__ == '__main__':\n    server.run(debug=True)\n\nHere is a minimal html menu.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Title</title>\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.1/css/bootstrap.min.css\" integrity=\"sha384-VCmXjywReHh4PwowAiWNagnWcLhlEJLA5buUprzK8rxFgeH0kww/aWY76TfkUoSX\" crossorigin=\"anonymous\">\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.1/js/bootstrap.min.js\" integrity=\"sha384-XEerZL0cuoUbHE4nZReLT7nx9gQrQreJekYhJD9WNWhH8nEW+0c5qq7aIo2Wl30J\" crossorigin=\"anonymous\"></script>\n</head>\n\n<title>My Application</title>\n<body>\n\n<br><br><br>\n\n<form action=\"{{url_for('menu')}}\" method=\"POST\" enctype=\"multipart/form-data\">\n\n<br>\n\n<div>\n    {{ form.varlist2.label}}\n    {{ form.varlist2 (class=\"form-control\") }}\n    <br>\n    {{ form.varlist3.label}}\n    {{ form.varlist3 }}\n</div>\n</form>\n\n<br><br>\n\n<select class=\"selectpicker\" data-live-search=\"true\">\n  <option data-tokens=\"ketchup mustard\">Hot Dog, Fries and a Soda</option>\n  <option data-tokens=\"mustard\">Burger, Shake and a Smile</option>\n  <option data-tokens=\"frosting\">Sugar, Spice and all things nice</option>\n</select>\n\n<!-- Latest compiled and minified CSS -->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js\"></script>\n\n<!-- (Optional) Latest compiled and minified JavaScript translation files -->\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/i18n/defaults-*.min.js\"></script>\n</body>\n</html>", "question_tags": ["html", "forms", "flask", "bootstrap-4", "flask-wtforms"], "question_author_name": "user350540", "question_author_link": "/users/7273115/user350540", "question_author_reputation": "123", "question_date": "16 hours ago", "question_comments": [{"text": "Does this solve your issue? ", "author": "v25", "date": "13 hours ago"}, {"text": "Yes, this resolved the issue. Much appreciated!", "author": "user350540", "date": "10 hours ago"}, {"text": "Does this answer your question? ", "author": "v25", "date": "9 hours ago"}], "all_answers": [], "answers_made": "1", "question_made": "47", "people_reached": "~4k", "member_since": "3 years, 8 months", "profile_view": "48 profile views", "last_see": "10 hours ago"}},
{"question": {"question_title": "python flask - api call doesn't work in deployed app", "question_text": "I have a flask application and am trying to troubleshoot why one of my routes doesn't work. I don't think the problem is with the route. The error comes when calling a function which involves an API request.\nHere is the route:\n@app.route(\"/weather_forecast/<climbing_area>/<city_id>/<lat>/<lon>/<weather_site>\")\ndef weather_forecast(climbing_area, city_id, lat, lon, weather_site):\n\n    sites = db.create_site_list_sqlite()\n    daily_forecast = wf.format_daily_forecast(city_id)\n    extended_forecast = wf.format_extended_forecast(city_id)\n    historical_forecast = wf.get_historical_weather(lat, lon)\n    dates = wf.get_date_range()\n\n\n    return render_template('weather_forecast.html', \n                   climbing_area=climbing_area, \n                   city_id=city_id, \n                   daily_forecast=daily_forecast, \n                   extended_forecast=extended_forecast, \n                   historical_forecast=historical_forecast,\n                   dates=dates,\n                   lat=lat,\n                   lon=lon,\n                   weather_site=weather_site,\n                   sites=sites,\n                   wf=wf)\n\nMy error comes with the line daily_forecast = wf.format_daily_forecast(city_id)\nThis line uses an API key to request weather data from https://openweathermap.org/api based on the location specified by the city_id argument.\nHere is the full error message from the error log:\n[2020-08-04 12:28:17,529] ERROR in app: Exception on /weather_forecast/American Fork/5779334/40.42/-111.97/Orem [GET]\n  Traceback (most recent call last):\n  File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/app.py\", line 2447, in wsgi_app\nresponse = self.full_dispatch_request()\n File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/app.py\", line 1952, in full_dispatch_request\nrv = self.handle_user_exception(e)\n File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/app.py\", line 1821, in handle_user_exception\nreraise(exc_type, exc_value, tb)\n File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\nraise value\n File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/app.py\", line 1950, in full_dispatch_request\nrv = self.dispatch_request()\n File \"/home/epurpur/ClimbingWeatherAppFlask/venv/lib/python3.8/site-packages/flask/app.py\", line 1936, in dispatch_request\nreturn self.view_functions[rule.endpoint](**req.view_args)\n File \"/home/epurpur/ClimbingWeatherAppFlask/weather_app_main.py\", line 46, in weather_forecast\ndaily_forecast = wf.format_daily_forecast(city_id)\n File \"/home/epurpur/ClimbingWeatherAppFlask/weather_forecast.py\", line 49, in format_daily_forecast\ntodays_data = extended_forecast_data[0]['list']\n KeyError: 'list'\n\nAgain, the daily_forecast function which uses an API key to get weather data is referenced in the error log:\n File \"/home/epurpur/ClimbingWeatherAppFlask/weather_app_main.py\", line 46, in weather_forecast\ndaily_forecast = wf.format_daily_forecast(city_id)\n\nBut I don't know why? When running the app locally, there is no problem here. There must be something else I am over looking?\nThough the last message in the error log is this todays_data = extended_forecast_data[0]['list'], this list doesn't exist because there is no data returned from an API call, in the above mentioned daily_forecast step", "question_tags": ["python", "flask"], "question_author_name": "Erich Purpur", "question_author_link": "/users/9305645/erich-purpur", "question_author_reputation": "511", "question_date": "15 hours ago", "question_comments": [{"text": "It's a ", "author": "jen", "date": "16 hours ago"}, {"text": "right, the list doesn't exist because the step before it 'daily_forecast = wf.format_daily_forecast(city_id)' isn't working, which calls for data.  But no data is returned so there is an empty list", "author": "Erich Purpur", "date": "15 hours ago"}, {"text": "Your question should show the code from the ", "author": "v25", "date": "13 hours ago"}], "all_answers": [], "answers_made": "5", "question_made": "43", "people_reached": "~8k", "member_since": "2 years, 6 months", "profile_view": "54 profile views", "last_see": "9 hours ago"}},
{"question": {"question_title": "Flask start Blueprint dynamically", "question_text": "Hello i have an question about Flask.\nI have an running app now i want to add dynamically an Blueprint app.\nfor example:\n# Create the app.\napp = Flask(__name__)\n\n# add blueprint route.\n@app.route('/start', methods=['POST'])\ndef start():\n    # start an new Blueprint inside current running app.\n    app = app + register_blueprint(my_blueprint_app)\n\n# Run the app.\nif __name__ == '__main__':\napp.run()\n\nis there a way to do this?\nmaybe with the blueprint url_prefix?\nor with the application_root?\nor with the dispatcher?\ni have tried many things nothing is working.", "question_tags": ["python", "multithreading", "flask", "url-routing"], "question_author_name": "Florian", "question_author_link": "/users/13163247/florian", "question_author_reputation": "1", "question_date": "15 hours ago", "question_comments": [], "all_answers": [], "answers_made": "1", "question_made": "7", "people_reached": "~185", "member_since": "4 months", "profile_view": "7 profile views", "last_see": "15 hours ago"}},
{"question": {"question_title": "How can I read user inputs from a dynamically created form in flask?", "question_text": "I want to create a dynamic input form and read the user inputs back when a button (\"Submit\") is pressed, what is the best way (a good way) to do this?\nI have tried creating a dynamic form with a FieldList but I was unable to get the values from the user.\nThis is (hopefully all of) the relevant code:\nforms.py\nclass EntryForm(Form):\n   field = StringField()\n\nclass DynamicForm(FlaskForm):\n   parameter = FieldList(FormField(EntryForm), min_entries=1)\n   submit = SubmitField('Submit')\n\nroutes.py\n@app.route(\"/new\", method=['GET', 'POST'])\ndef new_form():\n   form = DynamicForm()\n   if form.validate_on_submit():\n      values = form.parameter #This does not work as intended.\n      do_stuff(values)\n      return redirect(url_for('index'))\n\n   parameter = utils.get_parameter()\n   return render_template('dynamic_form.html', form=form, parameter=parameter)\n\nwhere utils.get_parameter() returns an unknown list of parameters. Or to be precise the function expects a parameter and returns a list based on this paramater, but I have omitted this here.\ndynamic_form.html\n{% extends \"layout.html\" %}\n{% macro render_field(item) %}\n<div class=\"form-group\">\n   <label class=\"form-control-label\">{{ item.label }}</label>\n   <input type=\"text\" name=\"{{ item.name }}\" class=\"form-control\" value=\"{{ item.value }}\"/>\n</div>\n{% endmacro %}\n{% block content %}\n   <div class=\"content-section\">\n      <form method=\"POST\" action=\"\">\n         {{ form.hidden_tag() }}\n         <fieldset class =\"form-group\">\n            <legend class=\"border-bottom mb-4\">Parameter</legend>\n            {% for item in form.parameter %}\n               {{ render_field(item) }}}\n            {% endfor %}\n         </fieldset>\n         <div class=\"form-group\">\n            {{ form.submit(class=\"btn btn-outline-info\") }}\n         </div>\n      </form>\n   </div>\n{% endblock content %}\n\nI assume it is because the validate_on_submit() is called after the form is constructed (again) and thus it does not contain the form fields, and especially not the user inputs. Is there a way to prevent this \"data loss\" or is this a completely wrong approach?\nAlso, please let me know if information is missing.", "question_tags": ["python-3.x", "flask", "jinja2", "flask-wtforms"], "question_author_name": "Saich", "question_author_link": "/users/14060386/saich", "question_author_reputation": "11", "question_date": "15 hours ago", "question_comments": [], "all_answers": [{"text": "You don't want to validate the form when the page first loads.  Try this first:\nif request.method == \"POST\" and form.validate_on_submit():\n    values = form.parameter \n    do_stuff(values)\n    return redirect(url_for('index'))\n\nNext, notice that you are redirecting them to your view for def index():.  Is that what you want?", "author": "GAEfan", "author_link": "/users/3524613/gaefan", "author_reputation": "8,552", "date": "14 hours ago", "comments": [{"text": "Thank you for your response, validate_on_submit() does exactly that as far as I know, it only validates if the request method was \"POST\". And the redirect does not matter, important is, that I have the values for the ", "author": "Saich", "date": "14 hours ago"}]}], "answers_made": "0", "question_made": "1", "people_reached": "~19", "member_since": "2 days", "profile_view": "1 profile view", "last_see": "1 min ago"}},
{"question": {"question_title": "Web application: Flask - html - wtforms: form with two submit buttons", "question_text": "I am new to programming. I am interested in developing a simple web app with two input values and two submit buttons. Numbers A and B are input by users and the product OR the sum will be shown depending on which button is pressed. When I use one button, the code works; however, I can't seem to figure out how to make both buttons work. I wrote the application in Flask and Python 3.8 and used wtforms.\nHere are my codes:\nview.html\n\n\n<table>\n  {% for field in form %}\n    <tr>\n    <td>{{ field.name }}</td><td>{{ field }}</td>\n    <td>{{ field.label }}</td>\n    </tr>\n  {% endfor %}\n</table>\n\n<form method=\"post\" action=\"\">\n<input type=\"submit\" name=\"btn\" value=\"Add\">\n</form>\n<p>\n<form method=\"post\" action=\"\">\n<input type=\"submit\" name=\"btn\" value=\"Multiply\">\n</form></p>\n\n<p>\n{% if result != None %}\n{{result}}\n{% endif %}\n</p>\n\nPython code\nviews.py\n\n@app.route(\"/comp\", methods=['GET', 'POST'])\ndef comp():\n    form = InputForm(request.form)\n    if request.method == 'POST' and form.validate():\n        if request.form[\"btn\"] == \"Add\":\n            result = add(form.A.data, form.B.data)\n        \n        elif request.form[\"btn\"] == \"Multiply\":\n            result = mul(form.A.data, form.B.data)\n    else: result = None\n    return render_template('view.html', form=form, result=result)\n\nI defined mul() and add() functions in a separate file, as I plan to expand the application further in the future. Here is the function definition:\n\ndef mul(A,B):\n    return  A*B\ndef add(A,B):\n    return  A+B\n\nMy input.py file:\nfrom wtforms import Form, FloatField, validators\n\nclass InputForm(Form):\n    A = FloatField(\n        label='A', default=0,\n        validators=[validators.InputRequired()])\n    B = FloatField(\n        label='B', default=0,\n        validators=[validators.InputRequired()])", "question_tags": ["python", "html", "flask", "web-applications", "wtforms"], "question_author_name": "aht", "question_author_link": "/users/14060715/aht", "question_author_reputation": "11", "question_date": "12 hours ago", "question_comments": [{"text": "You should add the code in your question, you can edit the asnwer. I see you shared the code in this link however it makes very difficult  to troubleshoot it. Even the fack that you can't copy and paste it.", "author": "Federico Ba\u00f9", "date": "13 hours ago"}, {"text": "By the way, in the form tag 'method' you missed the \"\" in post, so it should be like this method=\"post\". Also I am not getting the real issue. You basically want to be able to press as much as you want so that it gives you a new value each time?", "author": "Federico Ba\u00f9", "date": "13 hours ago"}, {"text": "Thank you. I am learning. It is my first post here.", "author": "aht", "date": "13 hours ago"}, {"text": "By looking at the full code I could better troubleshoot it, please have a look. I added lots of print statementy only for the purpose to better understand how the code works. this is actually how I find error quiclky", "author": "Federico Ba\u00f9", "date": "8 hours ago"}], "all_answers": [{"text": "If I understand the issue then try to do this:\nfrom flask import render_template, redirect, url_for, flash, request\n@app.route('/comp') #sample only\ndef comp():\n\n    form = InputForm(request.form)\n    if request.method == 'POST' and form.validate()\n        if request.form['btn'] == 'Add':\n            result = add(form.A.data, form.B.data)\n\n        elif request.form['btn'] == 'Multiply':\n            result = mul(form.A.data, form.B.data)\n        flash(result) # see the result in the browser\n        print('result') # see the result in the terminal\n        return redirect(url_for('comp'))\n    else:\n        result = None\n    return render_template('view.html', form=form, result=result)\n\nto implement the flash in the html simple add this somewhere\n{% for msg in get_flashed_messages()%}\n   <h1> {{msg}} </h1>\n{% endfor %}\n\nI always add a print statement and a flash for troubleshooting purposes in order to see where the issue is.", "author": "Federico Ba\u00f9", "author_link": "/users/13903942/federico-ba%c3%b9", "author_reputation": "114", "date": "13 hours ago", "comments": [{"text": "Thank you. I added them but every time I submit the form gets reset and nothing is printed or shown.", "author": "aht", "date": "13 hours ago"}]}, {"text": "One of your values is \"ADD\", but you test for \"Add\".  So, the equality test fails\nUPDATE:\nWhere are you defining add() and mul()?  Perhaps instead use:\nif request.form['btn'] == 'Add':\n    result = form.A.data + form.B.data\n\nelif request.form['btn'] == 'Multiply':\n    result = form.A.data * form.B.data\n\nUPDATE2:\nTry this to diagnose:\nif request.method == 'POST' and form.validate():\n    print(request.form[\"btn\"])\n    print(form.A.data, form.B.data)\n    print(request.POST)", "author": "GAEfan", "author_link": "/users/3524613/gaefan", "author_reputation": "8,552", "date": "12 hours ago", "comments": [{"text": "Good catch. I fixed that but the problem still persists.", "author": "aht", "date": "14 hours ago"}, {"text": "See edit to my answer", "author": "GAEfan", "date": "13 hours ago"}, {"text": "Thank you @GAfan. I have included the codes for add() and mul() functions.", "author": "aht", "date": "13 hours ago"}, {"text": "See new update.  May need to see your InputForm code.", "author": "GAEfan", "date": "12 hours ago"}, {"text": "thanks. I added my inputForm code.", "author": "aht", "date": "12 hours ago"}]}, {"text": "You have 3 different forms.  A and B are not part of either form you are submitting.", "author": "GAEfan", "author_link": "/users/3524613/gaefan", "author_reputation": "8,552", "date": "12 hours ago", "comments": [{"text": "not following. What do you mean?", "author": "aht", "date": "12 hours ago"}]}, {"text": "OK so I troubleshot your code. First thing first this is the result:\n\n\n\nFlask Code :\n\n\n\nfrom flask import Flask, request, render_template, url_for, flash, redirect\nfrom wtforms import SubmitField, Form, FloatField, validators\n\n\napp = Flask(__name__)\n\napp.config['SECRET_KEY'] = 'dev'\n\ndef mul(A,B):\n    return  A*B\ndef add(A,B):\n    return  A+B\n\n# Form\nclass InputForm(Form):\n    A = FloatField(\n        label='A', default=0,\n        validators=[validators.InputRequired()])\n    B = FloatField(\n        label='B', default=0,\n        validators=[validators.InputRequired()])\n   \n       \n       \n@app.route('/comp', methods=['GET', 'POST'])\n@app.route('/', methods=['GET', 'POST']) #this so that both url will work\ndef comp():\n\n    result = ''   #already assign a variable, else will throw error\n    form = InputForm(request.form)\n    if request.method == 'POST': #First we check if method is post **POINT 2**\n            if form.validate(): #Then if form is validate\n                print('form ok') #Test if form is ok\n                if request.form['btn'] == 'Add':\n                    result = add(form.A.data, form.B.data)\n                    print(result) \n            \n                elif request.form['btn'] == 'Multiply':\n                    result = mul(form.A.data, form.B.data)\n                    print(result)\n                \n                flash(result) # **POINT 3**\n                return redirect('comp') # This will make your code run forever #**4**     \n            else:\n                print('form no ok ') #check if form no ok\n    else:\n        print('request is get') # if you put the form.validate with the method condition, the form will return False as soons as you render the template\n\n    return render_template('view.html', form=form, result=result)\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n\n\n\nHTML file:\n\n\n\n  <form method=\"post\" action=\"\">\n      <table>\n        <!-- Generates form fields -->\n        <!-- POINT 1 -->\n        {% for field in form %}  \n\n            <td>{{ field.name }}</td><td>{{ field }}</td>\n            <td>{{ field.label }}</td>\n          </tr>\n          \n        {% endfor %}\n        \n        <tr>\n          <!-- Input are inside the form tag -->\n          <td><input type=\"submit\" name=\"btn\" value=\"Add\"></td>\n          <td><input type=\"submit\" name=\"btn\" value=\"Multiply\"></td>\n\n        </tr>\n      </table>\n    </form>\n\n<!-- Print result in the browser  -->\n<!-- Needs to redirect to the same page -->\n<!-- return redirect('comp')    -->\n\n  {% for msg in get_flashed_messages()%}\n  <h1>   {{msg}} </h1> \n  {% endfor%}\n\n\n\nSo the main issue was that in the HTML the form is not together with the input field, hence it was elaborating the form separately. By adding all together then it will start to work.\n\n\n\n\nIn the python file, the  if request.method == 'POST' condition run simultaneously with the form hence returning the form False even before submit it.\n\n\n\n.3  Added a Flash method so that you can see the result\n\n\n.4 Add a redirect, this will flash the result to the browser, but most importantly will refresh the form and gives you possibility to add a new one.\n\nNote that is also important to redirect the page because imagine if you want to commit it into a database, this will make you submit the form and save the changes.", "author": "Federico Ba\u00f9", "author_link": "/users/13903942/federico-ba%c3%b9", "author_reputation": "114", "date": "8 hours ago", "comments": [{"text": "Excellent! It works exactly as I want it. Well done and thanks for your time.", "author": "aht", "date": "4 hours ago"}, {"text": "Fantastic, then it would be helpful to approve my last asnwer as the correct one. This will help other people find a solution if needed", "author": "Federico Ba\u00f9", "date": "1 hour ago"}]}], "answers_made": "0", "question_made": "1", "people_reached": "~38", "member_since": "2 days", "profile_view": "2 profile views", "last_see": "3 hours ago"}},
{"question": {"question_title": "Prevent browsers from opening json files and instead download when sent from flask app", "question_text": "I have a JSON file in the flask app that i send via either send_from_directory() or via send_file() i have tried both. This triggers on button click but the browser opens the file directly instead of getting a download dialog box. I researched a bit and found out Firefox and Chrome have an inbuilt option to do this, however i want it to always download instead of opening no matter the setting in the browser.\nFlask Code\ndef download_file():\n    filename = \"requiredFields.json\"\n\n    return send_from_directory(app.config['MAIN_FOLDER'],filename,as_attachment=True)\n\nHTML That calls it\n<a href=\"{{url_for('download_file',filename = file)}}\"class=\"btn btn-primary\" type=\"button\">Download</a>", "question_tags": ["python", "html", "python-3.x", "flask", "web-applications"], "question_author_name": "DarkArcane", "question_author_link": "/users/8349098/darkarcane", "question_author_reputation": "3", "question_date": "14 hours ago", "question_comments": [{"text": "probably if you send it with ", "author": "furas", "date": "13 hours ago"}, {"text": null, "author": "furas", "date": "13 hours ago"}], "all_answers": [{"text": "If you set mimetype to 'application/octet-stream' then browser should save it.\nsend_file(..., mimetype='application/octet-stream')\n\nsend_from_directory(..., mimetype='application/octet-stream')\n\nDoc: send_file\nSee also: Do I need Content-Type: application/octet-stream for file download?\n\nEDIT:\nMinimal working example - you have to only set correct filenames in index()\nIt doesn't matter if you have file .json, .txt, image, .pdf or other. It works for all types of files.\nfrom flask import Flask, render_template_string, send_from_directory\n\napp = Flask(__name__)\napp.config['MAIN_FOLDER'] = '.'\n\n@app.route('/')\ndef index():\n    all_filenames = [\n        'requiredFields.json',\n        'input.txt',\n        'image.jpg',\n        'document.pdf',\n    ]\n    \n    return render_template_string('''\n{% for file in all_files %}\n    <a href=\"{{ url_for('download_file', filename=file) }}\">Download {{file}}</a><br/>\n{% endfor %}''', all_files=all_filenames)\n\n#@app.route('/download_file/<filename>')\n@app.route('/download_file/<path:filename>')\ndef download_file(filename):\n    return send_from_directory(app.config['MAIN_FOLDER'], filename, as_attachment=True, attachment_filename=filename, mimetype='application/octet-stream')\n    \nif __name__ == '__main__':    \n    app.run() #debug=True", "author": "furas", "author_link": "/users/1832058/furas", "author_reputation": "80.2k", "date": "7 hours ago", "comments": [{"text": "Hey Thanks for the response, but that still didn't work:(. Now i have two routes doing the same type of thing one is serving a JSON and one is serving a txt. Now i originally asked the question for the JSON one but that started working right as soon as i removed the filename attribute from the  <a> tag, now I'm having a problem with the txt one(Code is same) where i cannot remove that attribute and mimetype isn't fixing it:(.", "author": "DarkArcane", "date": "9 hours ago"}, {"text": "for flask and browser there is no difference if you send JSON or txt - both are only bytes - and in both you can use the same code with the same ", "author": "furas", "date": "8 hours ago"}, {"text": "I added minimal working example.", "author": "furas", "date": "7 hours ago"}]}], "answers_made": "0", "question_made": "2", "people_reached": "~418", "member_since": "3 years", "profile_view": "3 profile views", "last_see": "8 hours ago"}},
{"question": {"question_title": "ValueError: I/O operation on closed file, when calling a function more than once", "question_text": "I am implementing a react application in which I call some endpoints using flask, when I run the flask code for the first time it works fine but when I rerun it gives me this error:\nprint(\"End of Iterations\")\nValueError: I/O operation on closed file.\n\nThis is weird because all the files that i had opened i had close it and it shows that the error is in the print line can anyone help me please.\nThis is a part of the function that calls another function in which accure the error:\ndata= request.get_json()['tree']\ndata2=request.get_json()['Product_subproduct']\nData_name=data2['SelectedProduct']+'_'+data2['SelectedSubproduct']+'.csv'\nwith open(Data_name,'r') as csvfile:\n  Datasett=pd.read_csv(csvfile)\n  if (len(data['final_result']))!=0:\n      Features=[]\n      Selection=[]\n      for i in range(0,len(data['final_result'])):\n          Features.append(data['final_result'][i]['questions'])\n          Selection.append(data['final_result'][i]['answers'])\n      Features_Selection = dict(zip(Features, Selection))\n      df = DataFrame(list(Features_Selection.items()))\n      dataCOPY = deepcopy( Datasett)\n      for i in range(0,len(df)):\n          dataCOPY=dataCOPY[dataCOPY[df[0][i]]== df[1][i]]\n          dataCOPY=dataCOPY.drop(df[0][i], axis=1)\n          dataCOPY= dataCOPY.reset_index(drop=True)\n      df_copy=dataCOPY.copy()\n      _,size=df_copy.shape\n      X = df_copy.iloc[:, 0:df_copy.shape[1]-1]\n      y = df_copy.iloc[:,size-1]\n      dt_model = dt_c45(Xdata = X, ydata = y, cat_missing = \"none\", num_missing = \"none\", pre_pruning = \"none\", chi_lim = 0.1, min_lim = 5)\n\nThe function in which appear the problem :\n while (i < stop):\n    impurity = np.amax(gain_ratio)\n    gain_ratio.fill(0)\n    for element in range(1, branch[i].shape[1]):\n        if len(branch[i]) == 0:\n            skip_update = True \n            break\n        print(len(np.unique(branch[i][0])))\n        if len(np.unique(branch[i][0])) == 1 or len(branch[i]) == 1:\n             if \".\"  not in rule[i]:\n                 \n                 rule[i] = rule[i] + \" THEN \" + name + \" = \" + branch[i].iloc[0, 0] + \".\"\n                 rule[i] = rule[i].replace(\" AND  THEN \", \" THEN \")\n             skip_update = True\n             break", "question_tags": ["python", "flask"], "question_author_name": "Houda kilani", "question_author_link": "/users/13044289/houda-kilani", "question_author_reputation": "17", "question_date": "13 hours ago", "question_comments": [{"text": "please share your code", "author": "Tasnuva", "date": "14 hours ago"}, {"text": "I have updated the the post", "author": "Houda kilani", "date": "13 hours ago"}], "all_answers": [], "answers_made": "0", "question_made": "8", "people_reached": "~304", "member_since": "5 months", "profile_view": "6 profile views", "last_see": "11 hours ago"}},
